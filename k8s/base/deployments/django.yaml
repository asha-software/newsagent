apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: newsagent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: newsagent
      component: django
  template:
    metadata:
      labels:
        app: newsagent
        component: django
    spec:
      containers:
      - name: django
        image: 501501935864.dkr.ecr.us-west-2.amazonaws.com/newsagent-django:latest
        imagePullPolicy: IfNotPresent  # Use this for local development, change to Always for production
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASSWORD
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: API_URL
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /admin/login/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /admin/login/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
        command:
        - /bin/bash
        - -c
        - |
          python manage.py migrate &&
          python manage.py runserver 0.0.0.0:8000
      initContainers:
      - name: wait-for-db
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done;']
